# -*- coding: utf-8 -*-
"""corenabot.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1yh8Et4ixkW61pjRscsqOtkxH9OVcnjA1
"""

!pip install  newspaper3k

import nltk
from newspaper import Article
import random
import string
import numpy as np
import warnings
from sklearn.feature_extraction.text import TfidfVectorizer
from sklearn.metrics.pairwise import cosine_similarity

warnings.filterwarnings("ignore")

nltk.download('punkt',quiet=True)
nltk.download('wordnet', quiet=True)

article = Article('https://en.wikipedia.org/wiki/Coronavirus_disease_2019')
article.download()
article.parse()
article.nlp()
corpus = article.text

print(corpus)

text = corpus
sent_tokens = nltk.sent_tokenize(text) #converting text into a list of sentances
print(sent_tokens)

remove_punct_dict = dict( (punct,None) for punct in string.punctuation)
remove_punct_dict = dict( (ord(punct),None) for punct in string.punctuation) #to get the numbers for punctuation

print(string.punctuation)
print(remove_punct_dict)

def LemNormalize(text):
    return nltk.word_tokenize(text.lower().translate(remove_punct_dict))

print(LemNormalize(text))

GREETING_INPUTS = ["hi", "hello", "hola", "greetings", "wassup", "hey"]
# Greeting responses
GREETING_RESPONSES = ["howdy","hi", "hey", "what's good", "hello", "hey there"]

#function to return a random response
def greeting(sentance):
    #if user input a greeting it should respond with a random greeting response
    for word in sentance.split():
        if word.lower() in GREETING_INPUTS:
            return random.choice(GREETING_RESPONSES)

def response (user_response):
    # User response / query
    #user_response = "What is chronic kidney disease"
    user_response = user_response.lower()
    #### Print user reponse

    #print(user_response)
    #chatbot response
    robo_response = ''

    #append the user response to a sentance list
    sent_tokens.append(user_response)
    #### print the sentance list after appending the user response

    #print(sent_tokens)

    #create a TfidfVectorizer
    TfidfVec = TfidfVectorizer(tokenizer= LemNormalize ,stop_words='english')

    #convert text to a matrix of TF-IDF features
    tfidf = TfidfVec.fit_transform(sent_tokens)

    #### print tfidf features
    #print(tfidf)

    #get measures of the similarity (similarity scores) 
    vals = cosine_similarity(tfidf[-1], tfidf) # User response is at the end of the list ie.[-1].

    #### print similarity scores
    #print(vals)

    # get the index of most similar sentance/text to the user response
    idx = vals.argsort()[0][-2] # exclude the user response ie [-1], using [-2] to take the next one

    #reduce the dimentionality of vals ( vals is a list of list and now making to one list)
    flat = vals.flatten()

    #sort the list in acending order
    flat.sort()

    #get the most similar score for user response
    score = flat[-2]

    #### print the similarity score
    #print(score)

    #if the variable score is 0 then there is no text similar to user response

    if (score == 0) :
        robo_response = robo_response+"I apologize, I dont understand."
    else:
        robo_response = robo_response+sent_tokens[idx]

    # print the chatbot response
    #print(robo_response)

    # remove user response from sentance tokens

    sent_tokens.remove(user_response)
    return robo_response
#sent_tokens.remove(user_response)
flag = True
print("COVIBot : I am COVIBot (COVID-19 Bot). I will answer your queuries about COVID-19. If you want to exit type 'bye'")
while(flag == True):
    user_response = input()
    user_response = user_response.lower()
    if (user_response != 'bye'):
        if (user_response == 'thanks' or user_response == 'thank you'):
            flag = False
            print("COVIBot : You are welcome!")
        else:
            if (greeting(user_response) != None):
                print("COVIBot : " +greeting(user_response))
            else:
                print("COVIBot : " +response(user_response))
                
    else:
        flag = False
        print("COVIBot : Chat with you later !")

